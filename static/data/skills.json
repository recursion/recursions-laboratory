{
  "skills": [
    {
      "name": "Adaptability",
      "level": "5",
      "icon": "fas fa-graduation-cap",
      "description": "One of my greatest strengths is picking up a new technology and putting it to work. As a full stack 'generalist', and someone who loves jumping into and learning about new tech stacks/languages/frameworks, I find this ability to be extremely valuable."
    },
    {
      "name": "RTFM",
      "level": "5",
      "icon": "fas fa-book",
      "description": "Reading the Freaking Manual: One of the few skills I have continually used, and aquired near mastery of. Quickly finding, and 'Groking' information has proven to be critical when working across a multitude of technologies on a regular basis."
    },
    {
      "name": "JavaScript",
      "level": "4",
      "icon": "fab fa-node-js",
      "description": "I'm quite adept and comfortable with modern JavaScript including: Legacy, ES6, and some of ESNext. I have been tinkering with JS almost since it was first created, and while I still need to check documention regularly (who has the memory not to?), I am very familiar with it's constructs, as well as employing the good parts, while avoiding the bad (I'm looking at you 'this')."
    },
    {
      "name": "CSS/SCSS",
      "level": "3",
      "icon": "fab fa-css3-alt",
      "description": "I know my way around css and scss, and can generally get things positioned the way I need, particularly when using a library like bulma or bootstrap. All of that said, design is not my strong suite. I can generally get things laid out and working responsively, but it likely wont be the most attractive thing you ever saw! My concept of color schemes is pretty attrocious."
    },
    {
      "name": "Node.js",
      "level": "3",
      "icon": "fab fa-node",
      "description": "While node is just JavaScript, there are absolutely some differences between working on front-end javascript and backend node, so I think it's worth mentioning seperately. It has been a while since I've done any heavy back end work, but I have done some work on the backend, and am capable of doing it when needed."
    },
    {
      "name": "React/Redux",
      "level": "3",
      "icon": "fab fa-react",
      "description": "I have build a few projects recently using React/Redux and am quite familiar with the pattern. I definitley like the focus on function programming and one way data flow. It's a nice way to build in JavaScript, and I'm quite comfortable working with these libraries. I have also tinkered a bit with reasonML/reasonReact and am looking forward to seeing where it goes."
    },
    {
      "name": "Git",
      "level": "3",
      "icon": "fab fa-github-square",
      "description": "If I'm coding, I'm using git, and have been for many years now. It's an amazing tool and I'm quite comfortable employing commits, amends, pulls, clones, forks, etc. Addmittedly its been a while since I've done any pull-requests or rebases - but I'm sure it will come right back to me."
    },
    {
      "name": "DevOps",
      "level": "2",
      "icon": "fas fa-desktop",
      "description": "When it comes to linux and VPS setups, I am quite comfortable and capable of locking a system down, configuring and employing services, but my experience with 'cloud' services is pretty much limited to a bit of poking around with dropbox, heroku, aws, azure services. I would love to get some more experience in this area."
    },
    {
      "name": "Databases",
      "level": "2",
      "icon": "fas fa-database",
      "description": "I have used both SQL and noSQL databases over the years, and while It's been a while since I've done anything with one, I am certainly capable of setting up some tables, models, and creating basic interactions. I have a general grasp of relational models and normalization practices. This is one of those things where If I had to, I could get it working, but most likely it would need some refinement and optimizations."
    },
    {
      "name": "Algorithms and Data Structures",
      "level": "2",
      "icon": "fa fa-microchip",
      "description": "I have done some basic study in this area. I certainly understand Big O notation, and can generally determine if an algo falls within Constant, Linear, Quadratic or Logarithmic time. If its more mathmatically complex than one of those, I probably wouldnt be able to name it. I definitely will not be writing any ground breaking algos - but I generaly know enough to find one thats appropriate for my needs. Same goes for data structures - I wont be hand-coding any binary-search-trees, but I'll know when I need one, and how to find one that is well-implemented and tested."
    },
    {
      "name": "TDD",
      "level": "2",
      "icon": "fa fa-clipboard list",
      "description": "While I have created several projects using Test Driven Development, I still find it to be a bit of a departure from my default mode of coding. That said, I definitely see the value of the test first approach, as it forces you to really think about your design. TDD has also helped me appreciate functional programming more, as pure functions really make the testing process much less painful. I would love to be in an environment where I got to do more of it."
    },
    {
      "name": "Elm",
      "level": "2",
      "icon": "fa fa-heart",
      "description": "Elm is an awesome answer to JavaScript fatigue. This statically typed, functional language is opinionated with a small surface area, and is just a joy to work with. I absolutely love it. After working with javascript and trying to fit react, redux, immutable, typescript/flow, sagas together, Elm is like a breath of fresh air. I look forward to working with it more and seeing it's continued growth and development in the coming years."
    },
    {
      "name": "",
      "level": "",
      "icon": "",
      "description": ""
    }
  ]
}
